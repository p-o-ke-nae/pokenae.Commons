name: Publish NuGet Package

on:
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Increment version
      id: increment_version
      run: |
        PROJECT_FILE=$(find . -name '*.csproj' | head -n 1)
        VERSION_LINE=$(grep '<Version>' $PROJECT_FILE)
        VERSION=$(echo $VERSION_LINE | sed -E 's/.*<Version>([0-9]+\.[0-9]+\.[0-9]+)<\/Version>.*/\1/')
        IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
        VERSION_PARTS[2]=$((VERSION_PARTS[2] + 1))
        NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.${VERSION_PARTS[2]}"
        sed -i "s/<Version>$VERSION<\/Version>/<Version>$NEW_VERSION<\/Version>/" $PROJECT_FILE
        echo "New version: $NEW_VERSION"
        echo "new_version=$NEW_VERSION" >> $GITHUB_ENV

    - name: Build project
      run: dotnet build --configuration Release

    - name: Pack project
      run: dotnet pack --configuration Release --output ./nupkg

    - name: Publish to NuGet
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: dotnet nuget push ./nupkg/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json

    - name: Commit version increment
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}.git
        git add $(find . -name '*.csproj')
        git commit -m "Increment version to ${{ env.new_version }}"
        git push
